---
- name: Set up Build Server Ansible Development
  hosts: buildserver
  gather_facts: no
  vars_files:
    - ./vars/default-vars.yml

  tasks:

    - name: Wait 600 seconds for target connection to become reachable/usable
      ansible.builtin.wait_for_connection:
      delay: 15

    - name: upgrade all packages
      ansible.builtin.dnf:
        name: '*'
        state: latest
      become: yes
    
    - name: Determine whether /etc/yum.repos.d/kubernetes.repo exists
      ansible.builtin.stat:
        path: /etc/yum.repos.d/kubernetes.repo
      register: k8s_repo_file
      become: yes

    # https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-using-native-package-management
    - name: Add Kubernetes Repo
      ansible.builtin.shell: |
        cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
        enabled=1
        gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        EOF
      become: yes
      when: not k8s_repo_file.stat.exists

    - name: Determine whether /etc/yum.repos.d/google-cloud-sdk.repo exists
      ansible.builtin.stat:
        path: /etc/yum.repos.d/google-cloud-sdk.repo
      register: gcloud_sdk_repo_file
      become: yes

    # https://cloud.google.com/sdk/docs/install#rpm
    - name: Add Google Cloud SDK Repo
      ansible.builtin.shell: |
        sudo tee -a /etc/yum.repos.d/google-cloud-sdk.repo << EOM
        [google-cloud-cli]
        name=Google Cloud CLI
        baseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el8-x86_64
        enabled=1
        gpgcheck=1
        repo_gpgcheck=0
        gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        EOM
      become: yes
      when: not gcloud_sdk_repo_file.stat.exists

    - name: install packages
      ansible.builtin.dnf:
        name: "{{ item }}"
      loop: "{{ linux_packages }}"
      become: yes

    - name: Create git-workspace directory
      ansible.builtin.file:
        path: "/home/{{ hostvars[groups['buildserver'][0]].ansible_user }}//git-workspace"
        state: directory

    - name: Create venvs directory
      ansible.builtin.file:
        path: "/home/{{ hostvars[groups['buildserver'][0]].ansible_user }}//venvs"
        state: directory


    - name: Install virtualenv via pip
      ansible.builtin.pip:
        name: virtualenv
        executable: pip3

    - name: Set up Virtual Environment and Install Ansible Core
      ansible.builtin.pip: 
        name: "ansible-core=={{ ansible_core_version }}"
        virtualenv: /home/{{ hostvars[groups['buildserver'][0]].ansible_user }}/venvs/ansiblecore{{ ansible_core_version_underscore }}
    
    - name: Clone git repositories
      ansible.builtin.include_tasks: tasks/clone-git-repos.yml
      loop: "{{ git_repositories }}"

